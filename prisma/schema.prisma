// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int             @id @default(autoincrement())
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  name        String        
  email       String          @unique
  password    String        
  avatar      String?
  boards      BoardOnUser[]
  adminBoards Board[]
}

model Board {
  id          Int             @id @default(autoincrement())
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  title       String
  coverImage  String?
  visibility  Visibility
  listOrders  String[]
  lists       List[]
  labels      Label[]
  members     BoardOnUser[]
  admin       User            @relation(fields: [adminId], references: [id])
  adminId     Int
}

model List {
  id          Int             @id @default(autoincrement())
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  title       String
  cardIds     String[]
  cards       Card[]
  board       Board           @relation(fields: [boardId], references: [id])
  boardId     Int
}

model Card {
  id          Int             @id @default(autoincrement())
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  title       String
  labels      CardOnLabels[]
  list        List            @relation(fields: [listId], references: [id])
  listId      Int
}

model Label {
  id          Int             @id @default(autoincrement())
  name        String
  color       String
  cards       CardOnLabels[]
  board       Board           @relation(fields: [boardId], references: [id])
  boardId     Int
}

model CardOnLabels {
  card       Card             @relation(fields: [cardId], references: [id])
  cardId     Int
  label      Label            @relation(fields: [labelId], references: [id])
  labelId    Int

  @@id([cardId, labelId])
}

model BoardOnUser {
  user       User             @relation(fields: [userId], references: [id])
  userId     Int
  board      Board            @relation(fields: [boardId], references: [id])
  boardId    Int

  @@id([userId, boardId])
}

enum Visibility {
  PRIVATE
  PUBLIC
}